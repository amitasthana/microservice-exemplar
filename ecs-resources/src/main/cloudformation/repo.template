{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "RepoName":{
      "Type":"String",
      "Description":"Repo name",
      "Default": "microservice-exemplar"
    },
    "VPCId":{
      "Type":"String",
      "Description":"VPC to configure the target group in."
    },
    "EcsElbListenerArn":{
      "Type":"String",
      "Description":"Arn of the ELB listener to attach the target group to."
    },
    "PathPattern":{
      "Type":"CommaDelimitedList",
      "Description":"List of paths to route to the service."
    }
  },
  "Resources": {
    "EcsRepo": {
      "Type" : "AWS::ECR::Repository",
      "Properties" : {
        "RepositoryName" : {"Ref":"RepoName"},
        "RepositoryPolicyText" : {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "AllowPushPull",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {"Fn::Join":[":",["arn:aws:iam:",{"Ref":"AWS::AccountId"},"user/*"]]}
                }
              },
              "Action": [
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ]
            }
          ]
        }
      }
    },
    "EcsElbListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [{
          "Type": "forward",
          "TargetGroupArn": {
            "Ref": "EcsElbTargetGroup"
          }
        }],
        "Conditions": [{
          "Field": "path-pattern",
          "Values": {"Ref": "PathPattern"}
        }],
        "ListenerArn": { "Ref": "EcsElbListenerArn" },
        "Priority": 1
      }
    },
    "EcsElbTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/health",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 3,
        "HealthyThresholdCount": 2,
        "Matcher": {
          "HttpCode": "200-299"
        },
        "Port": "8080",
        "Protocol": "HTTP",
        "TargetGroupAttributes": [{
          "Key": "deregistration_delay.timeout_seconds",
          "Value": 60
        }],
        "UnhealthyThresholdCount": 5,
        "VpcId": {"Ref": "VPCId"}
      }
    }
  },
  "Outputs":{
    "RepoUrl" : {
      "Description" : "Url of the repo",
      "Value" : {"Fn::Join": ["",[{"Ref":"AWS::AccountId"}, ".dkr.ecr.", {"Ref":"AWS::Region"}, ".amazonaws.com/", {"Ref":"RepoName"}]]}
    },
    "EcsElbTargetGroupArn" : {
      "Description" : "Arn of the ELB target group",
      "Value" : {"Ref": "EcsElbTargetGroup"}
    }
  }
}
